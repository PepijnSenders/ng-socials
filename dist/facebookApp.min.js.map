{"version":3,"sources":["__generated__/facebookApp.js","directives/socialFacebook.js","services/Facebook.js","facebookApp.min.js","services/FacebookEmitter.js","services/FacebookScriptLoader.js"],"names":["facebookApp","angular","module","socialFacebookApp","directive","$rootScope","Facebook","$log","FacebookEmitter","scope","options","link","el","attrs","on","$apply","ngClick","replace","login","getLoginStatus","then","response","broadcast","error","share","url","logout","service","$q","FacebookScriptLoader","$timeout","this","getMe","getMeDeferred","defer","attach","fb","api","reject","resolve","email","id","promise","getPermissions","getPermissionsDefer","data","getUserLikesPage","userId","pageId","likePageDeffered","info","getLoginStatusDeferred","connected","status","authResponse","shareDeferred","ui","method","href","code","error_code","logoutDeferred","arguments","loginDeferred","getProfilePicture","type","getProfilePictureDeferred","factory","_createEventName","key","success","$broadcast","get","APP_ID","$window","attachDeferred","attached","script","document","createElement","src","body","appendChild","initialize","FB","init","appId","cookie","version","fbAsyncInit"],"mappings":"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","file":"facebookApp.min.js","sourcesContent":["var facebookApp = angular.module('facebookApp',[]);","socialFacebookApp.directive('socialFacebook', function ($rootScope, Facebook, $log, FacebookEmitter) {\n\n  return {\n    scope: {\n      'options': '=socialFacebook'\n    },\n    link: function(scope, el, attrs) {\n      el.on('click', function() {\n        scope.$apply(function() {\n          scope[attrs.ngClick.replace(/\\(\\)|\\;/g, '')]();\n        });\n      });\n\n      scope.login = function() {\n        Facebook.getLoginStatus()\n          .then(function(response) {\n            FacebookEmitter.broadcast('login', true, response);\n          })\n          .catch(function(response) {\n            $log.error(response.error);\n            Facebook.login(scope.options)\n            .then(function(response) {\n              FacebookEmitter.broadcast('login', true, response);\n            })\n            .catch(function(response) {\n              $log.error(response.error);\n              FacebookEmitter.broadcast('login', false, response)\n            });\n          });\n      };\n\n      scope.share = function() {\n        Facebook.share({\n          url: scope.options.url\n        })\n        .then(function(response) {\n          FacebookEmitter.broadcast('share', true, response);\n        })\n        .catch(function(response) {\n          FacebookEmitter.broadcast('share', false, response);\n        });\n      };\n\n      scope.logout = function() {\n        Facebook.getLoginStatus()\n          .then(function() {\n            Facebook.logout()\n              .then(function(response) {\n                FacebookEmitter.broadcast('logout', true, response);\n              })\n              .catch(function(response) {\n                FacebookEmitter.broadcast('logout', false, response);\n              });\n          })\n          .catch(function(rootScope) {\n            FacebookEmitter.broadcast('logout', true, response);\n          });\n      };\n    }\n  };\n\n});","socialFacebookApp.service('Facebook', function ($rootScope, $q, FacebookScriptLoader, $log, $timeout) {\n\n  this.getMe = function() {\n    var getMeDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api('/me', function(response) {\n          if ('error' in response) {\n            getMeDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if ('email' in response) {\n              getMeDeferred.resolve({\n                email: response.email,\n                id: response.id\n              });\n            } else {\n              getMeDeferred.reject({\n                error: 'No email'\n              });\n            }\n          }\n        });\n      });\n\n    return getMeDeferred.promise;\n  };\n\n  this.getPermissions = function() {\n    var getPermissionsDefer = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api('/me/permissions', function(response) {\n          if ('error' in response) {\n            getPermissionsDefer.reject({\n              error: response.error\n            });\n          } else {\n            getPermissionsDefer.resolve(response.data);\n          }\n        });\n      });\n\n    return getPermissionsDefer.promise;\n  };\n\n  this.getUserLikesPage = function(userId, pageId) {\n    var likePageDeffered = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api(`/${userId}/likes/${pageId}`, function(response) {\n          if ('error' in response) {\n            likePageDeffered.reject({\n              error: response.error\n            });\n          } else {\n            $log.info(response);\n          }\n        });\n      });\n\n    return likePageDeffered.promise;\n  };\n\n  this.getLoginStatus = function() {\n    var getLoginStatusDeferred = $q.defer();\n\n    var connected = 'connected';\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.getLoginStatus(function(response) {\n          if ('error' in response) {\n            getLoginStatusDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if (response.status === connected) {\n              getLoginStatusDeferred.resolve(response.authResponse);\n            } else {\n              getLoginStatusDeferred.reject({\n                error: `Status is ${response.status}`\n              });\n            }\n          }\n        });\n      });\n\n    return getLoginStatusDeferred.promise;\n  };\n\n  this.share = function(options) {\n    var shareDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.ui({\n          method: 'share',\n          href: options.url\n        }, function(response) {\n          if ('error' in response) {\n            shareDeferred.reject({\n              error: response.error,\n              code: response.error_code\n            });\n          } else {\n            shareDeferred.resolve(response);\n          }\n        });\n      });\n\n    return shareDeferred.promise;\n  };\n\n  this.logout = function() {\n    var logoutDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.logout(function(response) {\n          if ('error' in response) {\n            logoutDeferred.reject({\n              error: response.error\n            });\n          } else {\n            $timeout(function() {\n              logoutDeferred.resolve(response);\n            });\n          }\n        });\n      });\n\n    return logoutDeferred.promise;\n  };\n\n  this.login = function(options = {}) {\n    var loginDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.login(function(response) {\n          if ('error' in response) {\n            loginDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if (response.authResponse) {\n              loginDeferred.resolve(response.authResponse);\n            } else {\n              loginDeferred.reject({\n                error: 'User cancelled login'\n              });\n            }\n          }\n        }, options);\n      });\n\n    return loginDeferred.promise;\n  };\n\n  this.getProfilePicture = function(type = 'large') {\n    var getProfilePictureDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api(`/me/picture?type=${type}`, function(response) {\n          if ('error' in response) {\n            getProfilePictureDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if ('data' in response && 'is_silhouette' in response.data) {\n              getProfilePictureDeferred.resolve(response.data);\n            } else {\n              getProfilePictureDeferred.reject({\n                error: 'No picture'\n              });\n            }\n          }\n        });\n      });\n\n    return getProfilePictureDeferred.promise;\n  };\n\n});","\"use strict\";\nvar facebookApp = angular.module('facebookApp', []);\nsocialFacebookApp.directive('socialFacebook', function($rootScope, Facebook, $log, FacebookEmitter) {\n  return {\n    scope: {'options': '=socialFacebook'},\n    link: function(scope, el, attrs) {\n      el.on('click', function() {\n        scope.$apply(function() {\n          scope[attrs.ngClick.replace(/\\(\\)|\\;/g, '')]();\n        });\n      });\n      scope.login = function() {\n        Facebook.getLoginStatus().then(function(response) {\n          FacebookEmitter.broadcast('login', true, response);\n        }).catch(function(response) {\n          $log.error(response.error);\n          Facebook.login(scope.options).then(function(response) {\n            FacebookEmitter.broadcast('login', true, response);\n          }).catch(function(response) {\n            $log.error(response.error);\n            FacebookEmitter.broadcast('login', false, response);\n          });\n        });\n      };\n      scope.share = function() {\n        Facebook.share({url: scope.options.url}).then(function(response) {\n          FacebookEmitter.broadcast('share', true, response);\n        }).catch(function(response) {\n          FacebookEmitter.broadcast('share', false, response);\n        });\n      };\n      scope.logout = function() {\n        Facebook.getLoginStatus().then(function() {\n          Facebook.logout().then(function(response) {\n            FacebookEmitter.broadcast('logout', true, response);\n          }).catch(function(response) {\n            FacebookEmitter.broadcast('logout', false, response);\n          });\n        }).catch(function(rootScope) {\n          FacebookEmitter.broadcast('logout', true, response);\n        });\n      };\n    }\n  };\n});\nsocialFacebookApp.service('Facebook', function($rootScope, $q, FacebookScriptLoader, $log, $timeout) {\n  this.getMe = function() {\n    var getMeDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api('/me', function(response) {\n        if ('error' in response) {\n          getMeDeferred.reject({error: response.error});\n        } else {\n          if ('email' in response) {\n            getMeDeferred.resolve({\n              email: response.email,\n              id: response.id\n            });\n          } else {\n            getMeDeferred.reject({error: 'No email'});\n          }\n        }\n      });\n    });\n    return getMeDeferred.promise;\n  };\n  this.getPermissions = function() {\n    var getPermissionsDefer = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api('/me/permissions', function(response) {\n        if ('error' in response) {\n          getPermissionsDefer.reject({error: response.error});\n        } else {\n          getPermissionsDefer.resolve(response.data);\n        }\n      });\n    });\n    return getPermissionsDefer.promise;\n  };\n  this.getUserLikesPage = function(userId, pageId) {\n    var likePageDeffered = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api((\"/\" + userId + \"/likes/\" + pageId), function(response) {\n        if ('error' in response) {\n          likePageDeffered.reject({error: response.error});\n        } else {\n          $log.info(response);\n        }\n      });\n    });\n    return likePageDeffered.promise;\n  };\n  this.getLoginStatus = function() {\n    var getLoginStatusDeferred = $q.defer();\n    var connected = 'connected';\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.getLoginStatus(function(response) {\n        if ('error' in response) {\n          getLoginStatusDeferred.reject({error: response.error});\n        } else {\n          if (response.status === connected) {\n            getLoginStatusDeferred.resolve(response.authResponse);\n          } else {\n            getLoginStatusDeferred.reject({error: (\"Status is \" + response.status)});\n          }\n        }\n      });\n    });\n    return getLoginStatusDeferred.promise;\n  };\n  this.share = function(options) {\n    var shareDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.ui({\n        method: 'share',\n        href: options.url\n      }, function(response) {\n        if ('error' in response) {\n          shareDeferred.reject({\n            error: response.error,\n            code: response.error_code\n          });\n        } else {\n          shareDeferred.resolve(response);\n        }\n      });\n    });\n    return shareDeferred.promise;\n  };\n  this.logout = function() {\n    var logoutDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.logout(function(response) {\n        if ('error' in response) {\n          logoutDeferred.reject({error: response.error});\n        } else {\n          $timeout(function() {\n            logoutDeferred.resolve(response);\n          });\n        }\n      });\n    });\n    return logoutDeferred.promise;\n  };\n  this.login = function() {\n    var options = arguments[0] !== (void 0) ? arguments[0] : {};\n    var loginDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.login(function(response) {\n        if ('error' in response) {\n          loginDeferred.reject({error: response.error});\n        } else {\n          if (response.authResponse) {\n            loginDeferred.resolve(response.authResponse);\n          } else {\n            loginDeferred.reject({error: 'User cancelled login'});\n          }\n        }\n      }, options);\n    });\n    return loginDeferred.promise;\n  };\n  this.getProfilePicture = function() {\n    var type = arguments[0] !== (void 0) ? arguments[0] : 'large';\n    var getProfilePictureDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api((\"/me/picture?type=\" + type), function(response) {\n        if ('error' in response) {\n          getProfilePictureDeferred.reject({error: response.error});\n        } else {\n          if ('data' in response && 'is_silhouette' in response.data) {\n            getProfilePictureDeferred.resolve(response.data);\n          } else {\n            getProfilePictureDeferred.reject({error: 'No picture'});\n          }\n        }\n      });\n    });\n    return getProfilePictureDeferred.promise;\n  };\n});\nsocialFacebookApp.factory('FacebookEmitter', function($rootScope) {\n  var _createEventName = function(key) {\n    return (\"social.facebook.\" + key);\n  };\n  var FacebookEmitter = {\n    broadcast: function(key, success, response) {\n      $rootScope.$broadcast(_createEventName(key), {\n        success: success,\n        response: response\n      });\n    },\n    get: function(key) {\n      return _createEventName(key);\n    }\n  };\n  return FacebookEmitter;\n});\nsocialFacebookApp.factory('FacebookScriptLoader', function(APP_ID, $q, $window) {\n  var attachDeferred = $q.defer();\n  var attached = false;\n  var FacebookScriptLoader = {\n    fb: null,\n    attach: function() {\n      if (attached) {\n        return attachDeferred.promise;\n      }\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = '//connect.facebook.net/en_US/sdk.js';\n      document.body.appendChild(script);\n      attached = true;\n      return attachDeferred.promise;\n    },\n    initialize: function() {\n      FacebookScriptLoader.fb = $window.FB;\n      FacebookScriptLoader.fb.init({\n        appId: APP_ID,\n        cookie: true,\n        version: 'v2.0'\n      });\n      attachDeferred.resolve(FacebookScriptLoader.fb);\n    }\n  };\n  $window.fbAsyncInit = FacebookScriptLoader.initialize;\n  return FacebookScriptLoader;\n});\n","socialFacebookApp.factory('FacebookEmitter', function($rootScope) {\n\n  var _createEventName = function(key) {\n    return `social.facebook.${key}`;\n  };\n\n  var FacebookEmitter = {\n    broadcast: function(key, success, response) {\n      $rootScope.$broadcast(_createEventName(key), {\n        success: success,\n        response: response\n      });\n    },\n    get: function(key) {\n      return _createEventName(key);\n    }\n  };\n\n  return FacebookEmitter;\n\n});","socialFacebookApp.factory('FacebookScriptLoader', function(APP_ID, $q, $window) {\n\n  var attachDeferred = $q.defer();\n\n  var attached = false;\n\n  var FacebookScriptLoader = {\n\n    fb: null,\n\n    attach: function() {\n      if (attached) {\n        return attachDeferred.promise;\n      }\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = '//connect.facebook.net/en_US/sdk.js';\n      document.body.appendChild(script);\n\n      attached = true;\n\n      return attachDeferred.promise;\n    },\n\n    initialize: function() {\n      FacebookScriptLoader.fb = $window.FB;\n      FacebookScriptLoader.fb.init({\n        appId: APP_ID,\n        cookie: true,\n        version: 'v2.0'\n      });\n      attachDeferred.resolve(FacebookScriptLoader.fb);\n    }\n\n  };\n\n  $window.fbAsyncInit = FacebookScriptLoader.initialize;\n\n  return FacebookScriptLoader;\n\n});"],"sourceRoot":"/source/"}