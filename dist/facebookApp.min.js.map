{"version":3,"sources":["__generated__/facebookApp.js","directives/socialFacebook.js","services/Facebook.js","facebookApp.min.js","services/FacebookEmitter.js","services/FacebookScriptLoader.js"],"names":[],"mappings":"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","file":"facebookApp.min.js","sourcesContent":["var facebookApp = angular.module('facebookApp',[]);","facebookApp.directive('socialFacebook', function ($rootScope, Facebook, $log, FacebookEmitter) {\n\n  return {\n    scope: {\n      'options': '=socialFacebook'\n    },\n    link: function(scope, el, attrs) {\n      el.on('click', function() {\n        scope.$apply(function() {\n          scope[attrs.ngClick.replace(/\\(\\)|\\;/g, '')]();\n        });\n      });\n\n      scope.login = function() {\n        Facebook.getLoginStatus()\n          .then(function(response) {\n            FacebookEmitter.broadcast('login', true, response);\n          })\n          .catch(function(response) {\n            $log.error(response.error);\n            Facebook.login(scope.options)\n            .then(function(response) {\n              FacebookEmitter.broadcast('login', true, response);\n            })\n            .catch(function(response) {\n              $log.error(response.error);\n              FacebookEmitter.broadcast('login', false, response)\n            });\n          });\n      };\n\n      scope.share = function() {\n        Facebook.share({\n          url: scope.options.url,\n          method: scope.options.method,\n          app_id: scope.options.app_id,\n          name: scope.options.name,\n          link: scope.options.link,\n          redirect_uri: scope.options.redirect_uri,\n          caption: scope.options.caption,\n          description: scope.options.description,\n          message: scope.options.message,\n          display: scope.options.display\n        })\n        .then(function(response) {\n          FacebookEmitter.broadcast('share', true, response);\n        })\n        .catch(function(response) {\n          FacebookEmitter.broadcast('share', false, response);\n        });\n      };\n\n      scope.logout = function() {\n        Facebook.getLoginStatus()\n          .then(function() {\n            Facebook.logout()\n              .then(function(response) {\n                FacebookEmitter.broadcast('logout', true, response);\n              })\n              .catch(function(response) {\n                FacebookEmitter.broadcast('logout', false, response);\n              });\n          })\n          .catch(function(rootScope) {\n            FacebookEmitter.broadcast('logout', true, response);\n          });\n      };\n    }\n  };\n\n});","facebookApp.service('Facebook', function ($rootScope, $q, FacebookScriptLoader, $log, $timeout) {\n\n  this.getMe = function() {\n    var getMeDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api('/me', function(response) {\n          if (response && 'error' in response) {\n            getMeDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if ('email' in response) {\n              getMeDeferred.resolve({\n                email: response.email,\n                id: response.id\n              });\n            } else {\n              getMeDeferred.reject({\n                error: 'No email'\n              });\n            }\n          }\n        });\n      });\n\n    return getMeDeferred.promise;\n  };\n\n  this.getPermissions = function() {\n    var getPermissionsDefer = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api('/me/permissions', function(response) {\n          if (response && 'error' in response) {\n            getPermissionsDefer.reject({\n              error: response.error\n            });\n          } else {\n            getPermissionsDefer.resolve(response.data);\n          }\n        });\n      });\n\n    return getPermissionsDefer.promise;\n  };\n\n  this.getUserLikesPage = function(userId, pageId) {\n    var likePageDeffered = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api(`/${userId}/likes/${pageId}`, function(response) {\n          if (response && 'error' in response) {\n            likePageDeffered.reject({\n              error: response.error\n            });\n          } else {\n            $log.info(response);\n          }\n        });\n      });\n\n    return likePageDeffered.promise;\n  };\n\n  this.getLoginStatus = function() {\n    var getLoginStatusDeferred = $q.defer();\n\n    var connected = 'connected';\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.getLoginStatus(function(response) {\n          if (response && 'error' in response) {\n            getLoginStatusDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if (response.status === connected) {\n              getLoginStatusDeferred.resolve(response.authResponse);\n            } else {\n              getLoginStatusDeferred.reject({\n                error: `Status is ${response.status}`\n              });\n            }\n          }\n        });\n      });\n\n    return getLoginStatusDeferred.promise;\n  };\n\n  this.share = function(options) {\n    var shareDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.ui({\n          method: 'share',\n          href: options.url\n        }, function(response) {\n          if (response && 'error' in response) {\n            shareDeferred.reject({\n              error: response.error,\n              code: response.error_code\n            });\n          } else {\n            shareDeferred.resolve(response);\n          }\n        });\n      });\n\n    return shareDeferred.promise;\n  };\n\n  this.logout = function() {\n    var logoutDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.logout(function(response) {\n          if (response && 'error' in response) {\n            logoutDeferred.reject({\n              error: response.error\n            });\n          } else {\n            $timeout(function() {\n              logoutDeferred.resolve(response);\n            });\n          }\n        });\n      });\n\n    return logoutDeferred.promise;\n  };\n\n  this.login = function(options = {}) {\n    var loginDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.login(function(response) {\n          if (response && 'error' in response) {\n            loginDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if (response.authResponse) {\n              loginDeferred.resolve(response.authResponse);\n            } else {\n              loginDeferred.reject({\n                error: 'User cancelled login'\n              });\n            }\n          }\n        }, options);\n      });\n\n    return loginDeferred.promise;\n  };\n\n  this.getProfilePicture = function(type = 'large') {\n    var getProfilePictureDeferred = $q.defer();\n\n    FacebookScriptLoader.attach()\n      .then(function(fb) {\n        fb.api(`/me/picture?type=${type}`, function(response) {\n          if (response && 'error' in response) {\n            getProfilePictureDeferred.reject({\n              error: response.error\n            });\n          } else {\n            if ('data' in response && 'is_silhouette' in response.data) {\n              getProfilePictureDeferred.resolve(response.data);\n            } else {\n              getProfilePictureDeferred.reject({\n                error: 'No picture'\n              });\n            }\n          }\n        });\n      });\n\n    return getProfilePictureDeferred.promise;\n  };\n\n});","\"use strict\";\nvar facebookApp = angular.module('facebookApp', []);\nfacebookApp.directive('socialFacebook', function($rootScope, Facebook, $log, FacebookEmitter) {\n  return {\n    scope: {'options': '=socialFacebook'},\n    link: function(scope, el, attrs) {\n      el.on('click', function() {\n        scope.$apply(function() {\n          scope[attrs.ngClick.replace(/\\(\\)|\\;/g, '')]();\n        });\n      });\n      scope.login = function() {\n        Facebook.getLoginStatus().then(function(response) {\n          FacebookEmitter.broadcast('login', true, response);\n        }).catch(function(response) {\n          $log.error(response.error);\n          Facebook.login(scope.options).then(function(response) {\n            FacebookEmitter.broadcast('login', true, response);\n          }).catch(function(response) {\n            $log.error(response.error);\n            FacebookEmitter.broadcast('login', false, response);\n          });\n        });\n      };\n      scope.share = function() {\n        Facebook.share({\n          url: scope.options.url,\n          method: scope.options.method,\n          app_id: scope.options.app_id,\n          name: scope.options.name,\n          link: scope.options.link,\n          redirect_uri: scope.options.redirect_uri,\n          caption: scope.options.caption,\n          description: scope.options.description,\n          message: scope.options.message,\n          display: scope.options.display\n        }).then(function(response) {\n          FacebookEmitter.broadcast('share', true, response);\n        }).catch(function(response) {\n          FacebookEmitter.broadcast('share', false, response);\n        });\n      };\n      scope.logout = function() {\n        Facebook.getLoginStatus().then(function() {\n          Facebook.logout().then(function(response) {\n            FacebookEmitter.broadcast('logout', true, response);\n          }).catch(function(response) {\n            FacebookEmitter.broadcast('logout', false, response);\n          });\n        }).catch(function(rootScope) {\n          FacebookEmitter.broadcast('logout', true, response);\n        });\n      };\n    }\n  };\n});\nfacebookApp.service('Facebook', function($rootScope, $q, FacebookScriptLoader, $log, $timeout) {\n  this.getMe = function() {\n    var getMeDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api('/me', function(response) {\n        if (response && 'error' in response) {\n          getMeDeferred.reject({error: response.error});\n        } else {\n          if ('email' in response) {\n            getMeDeferred.resolve({\n              email: response.email,\n              id: response.id\n            });\n          } else {\n            getMeDeferred.reject({error: 'No email'});\n          }\n        }\n      });\n    });\n    return getMeDeferred.promise;\n  };\n  this.getPermissions = function() {\n    var getPermissionsDefer = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api('/me/permissions', function(response) {\n        if (response && 'error' in response) {\n          getPermissionsDefer.reject({error: response.error});\n        } else {\n          getPermissionsDefer.resolve(response.data);\n        }\n      });\n    });\n    return getPermissionsDefer.promise;\n  };\n  this.getUserLikesPage = function(userId, pageId) {\n    var likePageDeffered = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api((\"/\" + userId + \"/likes/\" + pageId), function(response) {\n        if (response && 'error' in response) {\n          likePageDeffered.reject({error: response.error});\n        } else {\n          $log.info(response);\n        }\n      });\n    });\n    return likePageDeffered.promise;\n  };\n  this.getLoginStatus = function() {\n    var getLoginStatusDeferred = $q.defer();\n    var connected = 'connected';\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.getLoginStatus(function(response) {\n        if (response && 'error' in response) {\n          getLoginStatusDeferred.reject({error: response.error});\n        } else {\n          if (response.status === connected) {\n            getLoginStatusDeferred.resolve(response.authResponse);\n          } else {\n            getLoginStatusDeferred.reject({error: (\"Status is \" + response.status)});\n          }\n        }\n      });\n    });\n    return getLoginStatusDeferred.promise;\n  };\n  this.share = function(options) {\n    var shareDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.ui({\n        method: 'share',\n        href: options.url\n      }, function(response) {\n        if (response && 'error' in response) {\n          shareDeferred.reject({\n            error: response.error,\n            code: response.error_code\n          });\n        } else {\n          shareDeferred.resolve(response);\n        }\n      });\n    });\n    return shareDeferred.promise;\n  };\n  this.logout = function() {\n    var logoutDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.logout(function(response) {\n        if (response && 'error' in response) {\n          logoutDeferred.reject({error: response.error});\n        } else {\n          $timeout(function() {\n            logoutDeferred.resolve(response);\n          });\n        }\n      });\n    });\n    return logoutDeferred.promise;\n  };\n  this.login = function() {\n    var options = arguments[0] !== (void 0) ? arguments[0] : {};\n    var loginDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.login(function(response) {\n        if (response && 'error' in response) {\n          loginDeferred.reject({error: response.error});\n        } else {\n          if (response.authResponse) {\n            loginDeferred.resolve(response.authResponse);\n          } else {\n            loginDeferred.reject({error: 'User cancelled login'});\n          }\n        }\n      }, options);\n    });\n    return loginDeferred.promise;\n  };\n  this.getProfilePicture = function() {\n    var type = arguments[0] !== (void 0) ? arguments[0] : 'large';\n    var getProfilePictureDeferred = $q.defer();\n    FacebookScriptLoader.attach().then(function(fb) {\n      fb.api((\"/me/picture?type=\" + type), function(response) {\n        if (response && 'error' in response) {\n          getProfilePictureDeferred.reject({error: response.error});\n        } else {\n          if ('data' in response && 'is_silhouette' in response.data) {\n            getProfilePictureDeferred.resolve(response.data);\n          } else {\n            getProfilePictureDeferred.reject({error: 'No picture'});\n          }\n        }\n      });\n    });\n    return getProfilePictureDeferred.promise;\n  };\n});\nfacebookApp.factory('FacebookEmitter', function($rootScope) {\n  var _createEventName = function(key) {\n    return (\"social.facebook.\" + key);\n  };\n  var FacebookEmitter = {\n    broadcast: function(key, success, response) {\n      $rootScope.$broadcast(_createEventName(key), {\n        success: success,\n        response: response\n      });\n    },\n    get: function(key) {\n      return _createEventName(key);\n    }\n  };\n  return FacebookEmitter;\n});\nfacebookApp.factory('FacebookScriptLoader', function(APP_ID, $q, $window) {\n  var attachDeferred = $q.defer();\n  var attached = false;\n  var FacebookScriptLoader = {\n    fb: null,\n    attach: function() {\n      if (attached) {\n        return attachDeferred.promise;\n      }\n      if (!$window.FB) {\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = '//connect.facebook.net/en_US/sdk.js';\n        document.body.appendChild(script);\n      }\n      attached = true;\n      return attachDeferred.promise;\n    },\n    initialize: function() {\n      FacebookScriptLoader.fb = $window.FB;\n      FacebookScriptLoader.fb.init({\n        appId: APP_ID,\n        cookie: true,\n        version: 'v2.0'\n      });\n      attachDeferred.resolve(FacebookScriptLoader.fb);\n    }\n  };\n  $window.fbAsyncInit = FacebookScriptLoader.initialize;\n  return FacebookScriptLoader;\n});\n","facebookApp.factory('FacebookEmitter', function($rootScope) {\n\n  var _createEventName = function(key) {\n    return `social.facebook.${key}`;\n  };\n\n  var FacebookEmitter = {\n    broadcast: function(key, success, response) {\n      $rootScope.$broadcast(_createEventName(key), {\n        success: success,\n        response: response\n      });\n    },\n    get: function(key) {\n      return _createEventName(key);\n    }\n  };\n\n  return FacebookEmitter;\n\n});","facebookApp.factory('FacebookScriptLoader', function(APP_ID, $q, $window) {\n\n  var attachDeferred = $q.defer();\n\n  var attached = false;\n\n  var FacebookScriptLoader = {\n\n    fb: null,\n\n    attach: function() {\n      if (attached) {\n        return attachDeferred.promise;\n      }\n\n      if (!$window.FB) {\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = '//connect.facebook.net/en_US/sdk.js';\n        document.body.appendChild(script);\n      }\n\n      attached = true;\n\n      return attachDeferred.promise;\n    },\n\n    initialize: function() {\n      FacebookScriptLoader.fb = $window.FB;\n      FacebookScriptLoader.fb.init({\n        appId: APP_ID,\n        cookie: true,\n        version: 'v2.0'\n      });\n      attachDeferred.resolve(FacebookScriptLoader.fb);\n    }\n\n  };\n\n  $window.fbAsyncInit = FacebookScriptLoader.initialize;\n\n  return FacebookScriptLoader;\n\n});"],"sourceRoot":"/source/"}