"use strict";
var twitterApp = angular.module('twitterApp', []);
twitterApp.directive('socialTwitter', ["Twitter", "$window", "TwitterEmitter", function(Twitter, $window, TwitterEmitter) {
  return {
    scope: {'options': '=socialTwitter'},
    link: function(scope, el, attrs) {
      Twitter.loadWidget(el[0].parentNode);
      var urlParameters = [];
      for (var key in scope.options) {
        var encoded = $window.encodeURIComponent(scope.options[key]);
        urlParameters.push((key + "=" + encoded));
      }
      var urlParametersString = urlParameters.join('&');
      var url = ("https://twitter.com/intent/tweet?" + urlParametersString);
      el[0].setAttribute('href', url);
      Twitter.bind('tweet', function(e) {
        if (e.target === el[0]) {
          TwitterEmitter.broadcast('tweet', true, e);
        }
      });
    }
  };
}]);
twitterApp.service('Twitter', ["TwitterScriptLoader", "TwitterEmitter", "$window", function(TwitterScriptLoader, TwitterEmitter, $window) {
  this.bind = function(eventName, cb) {
    TwitterScriptLoader.attach().then(function(twttr) {
      twttr.events.bind(eventName, cb);
    });
  };
  this.loadWidget = function(el) {
    TwitterScriptLoader.attach().then(function(twttr) {
      twttr.widgets.load(el);
    });
  };
}]);
twitterApp.factory('TwitterEmitter', ["$rootScope", function($rootScope) {
  var _createEventName = function(key) {
    return ("social.twitter." + key);
  };
  var TwitterEmitter = {
    broadcast: function(key, success, response) {
      $rootScope.$broadcast(_createEventName(key), {
        success: success,
        response: response
      });
    },
    get: function(key) {
      return _createEventName(key);
    }
  };
  return TwitterEmitter;
}]);
twitterApp.factory('TwitterScriptLoader', ["$q", "$window", function($q, $window) {
  var attachDeferred = $q.defer();
  var attached = false;
  var TwitterScriptLoader = {
    twttr: null,
    attach: function() {
      if (attached) {
        return attachDeferred.promise;
      }
      attached = true;
      if (!$window.twttr) {
        $window.twttr = (function(d, s, id) {
          var js,
              fjs = d.getElementsByTagName(s)[0],
              t = $window.twttr || {};
          if (d.getElementById(id))
            return;
          js = d.createElement(s);
          js.id = id;
          js.src = 'https://platform.twitter.com/widgets.js';
          fjs.parentNode.insertBefore(js, fjs);
          t._e = [];
          t.ready = function(f) {
            t._e.push(f);
          };
          return t;
        }(document, 'script', 'twitter-wjs'));
      }
      $window.twttr.ready(this.initialize);
      return attachDeferred.promise;
    },
    initialize: function(twttr) {
      TwitterScriptLoader.twttr = twttr;
      attachDeferred.resolve(TwitterScriptLoader.twttr);
    }
  };
  return TwitterScriptLoader;
}]);